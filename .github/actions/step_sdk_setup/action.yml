name: step_sdk_setup
inputs:
  scriptPath:
    required: false
    type: string
  setupType:
    required: false
    default: promptflow_with_extra
    type: string
runs:
  using: composite
  steps:
  - name: Clean up installed packages
    working-directory: ${{ inputs.scriptPath }}
    continue-on-error: true
    shell: pwsh
    run: |
      pip uninstall -y promptflow promptflow-sdk promptflow-tools
  - name: 'Build and install: promptflow-tools'
    shell: pwsh
    run: |
      Set-PSDebug -Trace 2
      python ./setup.py bdist_wheel
      $package = Get-ChildItem ./dist | ? { $_.Name.Contains('.whl')}
      pip install $package.FullName
      echo "########### pip freeze (After) ###########"
      pip freeze
    working-directory: src/promptflow-tools
  - name: 'Build and install: promptflow with extra'
    if: inputs.setupType == 'promptflow_with_extra'
    shell: pwsh
    run: |
      Set-PSDebug -Trace 1
      pip install -r ./dev_requirements.txt
      echo "########### pip list (Before) ###########"
      pip list
      python ./setup.py bdist_wheel
      $package = Get-ChildItem ./dist | ? { $_.Name.Contains('.whl')}
      pip install $($package.FullName + "[azure,executable]")
      echo "########### pip freeze (After) ###########"
      pip freeze
    working-directory: ${{ inputs.scriptPath }}
  - name: 'Build and install: promptflow-sdk'
    if: inputs.setupType == 'promptflow_dev'
    shell: pwsh
    run: |
      Set-PSDebug -Trace 1
      pip install -r ./dev_requirements.txt
      python ./setup.py bdist_wheel
      $package = Get-ChildItem ./dist | ? { $_.Name.Contains('.whl')}
      pip install $package.FullName
      echo "########### pip freeze ###########"
      pip freeze
    working-directory: ${{ inputs.scriptPath }}

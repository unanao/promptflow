# This code is autogenerated.
# Code is generated by running custom script: python3 readme.py
# Any manual changes to this file may cause incorrect behavior.
# Any manual changes will be overwritten if the code is regenerated.

name: samples_tutorials_flow_deploy_docker
on:
  schedule:
    - cron: "53 20 * * *" # Every day starting at 4:53 BJT
  pull_request:
    branches: [ main ]
    paths: [ examples/**, .github/workflows/samples_tutorials_flow_deploy_docker.yml, '!examples/flows/integrations/**' ]
  workflow_dispatch:

env:
  IS_IN_CI_PIPELINE: "true"

jobs:
  samples_readme_ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python 3.9 environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Generate config.json for canary workspace (scheduled runs only)
        if: github.event_name == 'schedule'
        run: echo '${{ secrets.TEST_WORKSPACE_CONFIG_JSON_CANARY }}' > ${{ github.workspace }}/examples/config.json
      - name: Generate config.json for production workspace
        if: github.event_name != 'schedule'
        run: echo '${{ secrets.EXAMPLE_WORKSPACE_CONFIG_JSON_PROD }}' > ${{ github.workspace }}/examples/config.json
      - name: Prepare requirements
        working-directory: examples
        run: |
          if [[ -e requirements.txt ]]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          fi
      - name: Prepare dev requirements
        working-directory: examples
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt
      - name: Refine .env file
        working-directory: examples/tutorials/flow-deploy/docker
        run: |
          AOAI_API_KEY=${{ secrets.AOAI_API_KEY_TEST }}
          AOAI_API_ENDPOINT=${{ secrets.AOAI_API_ENDPOINT_TEST }}
          AOAI_API_ENDPOINT=$(echo ${AOAI_API_ENDPOINT//\//\\/})
          if [[ -e .env.example ]]; then
            echo "env replacement"
            sed -i -e "s/<your_AOAI_key>/$AOAI_API_KEY/g" -e "s/<your_AOAI_endpoint>/$AOAI_API_ENDPOINT/g" .env.example
            mv .env.example .env
          fi
      - name: Create run.yml
        working-directory: examples/tutorials/flow-deploy/docker
        run: |
          gpt_base=${{ secrets.AOAI_API_ENDPOINT_TEST }}
          gpt_base=$(echo ${gpt_base//\//\\/})
          if [[ -e run.yml ]]; then
            sed -i -e "s/\${azure_open_ai_connection.api_key}/${{ secrets.AOAI_API_KEY_TEST }}/g" -e "s/\${azure_open_ai_connection.api_base}/$gpt_base/g" run.yml
          fi
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Extract Steps examples/tutorials/flow-deploy/docker/README.md
        working-directory: ${{ github.workspace }}
        run: |
          python scripts/readme/extract_steps_from_readme.py -f examples/tutorials/flow-deploy/docker/README.md -o examples/tutorials/flow-deploy/docker
      - name: Cat script
        working-directory: examples/tutorials/flow-deploy/docker
        run: |
          cat bash_script.sh
      - name: Run scripts
        working-directory: examples/tutorials/flow-deploy/docker
        run: |
          export aoai_api_key=${{secrets.AOAI_API_KEY_TEST }}
          export aoai_api_endpoint=${{ secrets.AOAI_API_ENDPOINT_TEST }}
          export test_workspace_sub_id=${{ secrets.TEST_WORKSPACE_SUB_ID }}
          export test_workspace_rg=${{ secrets.TEST_WORKSPACE_RG }}
          export test_workspace_name=${{ secrets.TEST_WORKSPACE_NAME_CANARY }}
          bash bash_script.sh
      - name: Pip List for Debug
        if : ${{ always() }}
        working-directory: examples/tutorials/flow-deploy/docker
        run: |
          pip list
      - name: Upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: examples/tutorials/flow-deploy/docker/bash_script.sh